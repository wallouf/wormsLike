/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Game_Frame.java
 *
 * Created on 28 juin 2011, 14:51:44
 */
package wormslike_game;

import java.awt.event.KeyEvent;
import java.util.HashMap;
import javax.swing.JOptionPane;
import wormslike.WormsLike_Main;
import wormslike_sound.Game_Sound;

/**
 *
 * @author wallouf
 * SERT DE SUPPORT AU JEU ET CONTIEN LE JPANEL "Game_Calque" qui redefini dans sa classe toute la partie graphique
 */
public class Game_Frame extends javax.swing.JFrame {

    WormsLike_Main viewParent;

    /** Creates new form Game_Frame */
    //mise en place de la taille, du nom et des options
    public Game_Frame() {
        initComponents();
        this.setTitle("World like party one player");
        this.setSize(1008, 1000);
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        gC = new Game_Calque(this, false);
        this.setContentPane(gC);
    }

    /** Creates new form Game_Frame */
    //mise en place de la taille, du nom et des options avec partage de la map, si on fait un rendu et si on veut l'IA
    public Game_Frame(HashMap<Integer, Integer> mapPos, boolean rendering, boolean IA) {
        initComponents();
        if (rendering) {
            this.setTitle("EDITOR RENDERING");
        } else if (IA) {
            this.setTitle("World like party one player");
        } else {
            this.setTitle("World like party two player");
        }
        this.setSize(1008, 1000);
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        gC = new Game_Calque(this, mapPos, rendering, IA);
        this.setContentPane(gC);
    }

    /** Creates new form Game_Frame */
    //mise en place de la taille, du nom et des options avec partage de la classe parente, de la map, si on fait un rendu et si on veut l'IA
    public Game_Frame(WormsLike_Main viewParent, HashMap<Integer, Integer> mapPos, boolean rendering, boolean IA) {
        this.viewParent = viewParent;
        initComponents();
        if (rendering) {
            this.setTitle("EDITOR RENDERING");
        } else if (IA) {
            this.setTitle("World like party one player");
        } else {
            this.setTitle("World like party two player");
        }
        this.setSize(1008, 1000);
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        gC = new Game_Calque(this, mapPos, rendering, IA);
        this.setContentPane(gC);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CAPTE LAPPUI SUR LE CLAVIER
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (gC.isIA()) {
            return;
        }
        if ((evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_SPACE || evt.getKeyCode() == KeyEvent.VK_P)) {
            if (release) {
                release = false;
                gC.Move(evt.getKeyCode());
            }
        } else {
            gC.Move(evt.getKeyCode());
        }
    }//GEN-LAST:event_formKeyPressed
    //CAPTE LE RELACHEMENT D'UNE TOUCHE DU CLAVIER (empeche de rester appuyer pour marcher)
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (gC.isIA()) {
            return;
        }
        release = true;
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            gC.setSetPower(false);
        }
    }//GEN-LAST:event_formKeyReleased
    //CAPTE LA FERMETURE DE LA FENETRE AFIN DE MAITRISER CELLE CI
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (viewParent != null) {
            if (gC.partyEnd) {
                viewParent.setVisible(true);
                this.dispose();
            } else {
                int option = JOptionPane.showConfirmDialog(null, "Do you really want to leave the party and go back in menu ?", "leave the party ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (option == JOptionPane.OK_OPTION) {
                    viewParent.setVisible(true);
                    gC.stopAmbiance();
                    Game_Sound.playMenu();
                    this.dispose();
                }
            }
        } else {
            this.dispose();
            Game_Sound.playMenu();
        }
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    Game_Calque gC;
    boolean release = true;

    public void closeGame() {
        if (viewParent != null) {
            viewParent.setVisible(true);
            Game_Sound.playMenu();
            this.dispose();
        }
    }
}
